

#For Aroha Deployment
#spring.datasource.url= jdbc:mysql://arohamysqlrds.cvc8b2isrkrv.us-west-2.rds.amazonaws.com/domain_live?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=domain
#spring.datasource.password=ArohDomain!2019
##
###Server Properties
#server.port=9071

##For Local development
spring.datasource.url=jdbc:mysql://localhost:3307/arohadomainapp?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.url=jdbc:mysql://localhost:3307/domain_live?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=root



#For Aroha Deployment using environmental
#Map<String, String> env = System.getenv();
#spring.datasource.username = ${MYSQL_DB_USERNAME}
#spring.datasource.password = ${MYSQL_DB_PASSWORD}
#spring.datasource.url = ${MYSQL_DB_URL}
#server.port = ${SERVER_PORT}



#spring.datasource.password = env.get("MYSQL_DB_PASSWORD");   
#spring.datasource.username = env.get("MYSQL_DB_USERNAME");   
#spring.datasource.url = env.get("MYSQL_DB_URL"); 
#String sqlPort = env.get("MYSQL_DB_PORT");


##server properties
server.port = 8085

##server.address=192.168.1.20


##Hibernate Properties
#The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

# spring jsp suffix
spring.mvc.view.suffix=.jsp

##Uploading File size limitation
spring.servlet.multipart.max-file-size = 128MB
spring.servlet.multipart.max-request-size = 128MB
spring.servlet.multipart.enabled=true

#Logger Properties 

logging.level.com.aroha.pet=INFO
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
logging.path=logs
logging.file.max-size=10MB
logging.file.max-history=4
logging.file=${logging.path}/petApplog.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

#*************************************************************************************
#//_____________________________________________________________________________________

	#/* PASSWORD INTEGRATION DATE:03/03/2020 */

#spring.mail.host = ${EMAIL_HOST}
spring.mail.host = smtp.gmail.com
#spring.mail.username = ${EMAIL_USERNAME}
#spring.mail.password = ${EMAIL_PASSWORD}
#spring.mail.username =***********
#spring.mail.password =***********
spring.mail.username = apitestmailsend@gmail.com
spring.mail.password = TEST_SERVICE


spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.starttls.enable= true
#spring.mail.properties.mail.smtp.socketFactory.port = ${EMAIL_SMTP_PORT}
#spring.mail.properties.mail.smtp.socketFactory.port = 587
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
